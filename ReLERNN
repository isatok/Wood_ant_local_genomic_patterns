### INSTALLATION, as per https://github.com/kr-colab/ReLERNN 06.11.2024 ###

#Install tensorflow 2 on your system. You will also need to install the CUDA toolkit and CuDNN. 
#ReLERNN requires the use of a CUDA-Enabled NVIDIA GPU. The current version of ReLERNN has been successfully tested with 
#tensorflow/2.2.0, cudatoolkit/10.1.243, and cudnn/7.6.5.

module spider ...

#--> Puhti has tensorflow/2.17...2.8, cuda (which may contain cudatoolkit), and cudnn (7.6.5...8.1.0)

### Install ReLERNN ###
cd $PROJAPPL
git clone https://github.com/kr-colab/ReLERNN.git

cd ReLERNN
module load python-data
pip install .
#Successfully installed ReLERNN-0.2 demes-0.2.3 msprime-1.3.3 newick-1.9.0 ruamel.yaml-0.18.6 ruamel.yaml.clib-0.2.12 scikit-allel-1.3.13 svgwrite-1.4.3 tskit-0.6.0

### Test it functions properly ###
cd $SCRATCH
mkdir ReLERNN
cd ReLERNN
mkdir logs
mkdir example_output

cp $PROJAPPL/ReLERNN/examples/example_pipeline.sh .
nano example_pipeline.sh #THIS NEEDS TO BE MODIFIED SO THAT I CAN ACTUALLY TEST THE PROGRAMME. (Wrong file paths, lacks slurm beginning lines, etc).

######---test script starts here---

#!/bin/bash -l
#SBATCH -J relernn_test
#SBATCH -o logs/ReLERNN_test.out
#SBATCH -e logs/ReLERNN_test.err
#SBATCH --account=project_2001443
#SBATCH -t 01:00:00
#SBATCH -p small
#SBATCH --ntasks 1
#SBATCH --mem=2G

cd $PROJAPPL/ReLERNN/

python
SIMULATE="ReLERNN_SIMULATE"
TRAIN="ReLERNN_TRAIN"
PREDICT="ReLERNN_PREDICT"
BSCORRECT="ReLERNN_BSCORRECT"
SEED="42"
MU="1e-8"
URTR="1"
DIR="/scratch/project_2001443/ReLERNN/example_output/"
VCF="/projappl/project_2001443/ReLERNN/example.vcf"
GENOME="/projappl/project_2001443/ReLERNN/genome.bed"
MASK="/projappl/project_2001443/ReLERNN/accessibility_mask.bed"

# Simulate data
${SIMULATE} \
    --vcf ${VCF} \
    --genome ${GENOME} \
    --mask ${MASK} \
    --projectDir ${DIR} \
    --assumedMu ${MU} \
    --upperRhoThetaRatio ${URTR} \
    --nTrain 13000 \
    --nVali 2000 \
    --nTest 100 \
    --seed ${SEED}

# Train network
${TRAIN} \
    --projectDir ${DIR} \
    --seed ${SEED}

# Predict
${PREDICT} \
    --vcf ${VCF} \
    --projectDir ${DIR} \
    --seed ${SEED}

# Parametric Bootstrapping
${BSCORRECT} \
    --projectDir ${DIR} \
    --nSlice 2 \
    --nReps 2 \
    --seed ${SEED}


###This is the end.

#####---End of the test script-----
