
###
### Neighbour-joining tree
###

#Create the tree with *no missing data*
nj(X)    #X: a distance matrix; may be an object of class “dist”.

## Follow Sean's recent NJ pipeline in 
https://github.com/seanstankowski/Littorina_reproductive_mode/blob/main/3_genomeWide_relationships/NJtree_phylonet/buildTrees.ipynb

#the data seems to be needed to be in phylip format "variants_only_108_VCF_MAC2_minQ30_maxmiss1.0.recode.min4.phy"
#converted from VCF. apply mac2 filtering, and they did this with no missing data.



###
### Prepare data
###

mkdir /scratch/project_2001443/barriers_introgr_formica/nj_tree  #phylogeny dir
cd /scratch/project_2001443/barriers_introgr_formica/nj_tree    

sinteractive...
module load biokit

# 1. Imputed (no missing data) and mac2-filtered dataset - all SNPs available for phylogeny
PHASEDVCF=/scratch/project_2001443/barriers_introgr_formica/vcf/phasing/shapeit/all_samples.DP8.hwe.AN10.noScaff00.mac2.whap.shapeit.allScafs.vcf.gz 
bcftools index -n $PHASEDVCF    #534202 sites

# 2. Mac2-filtered dataset that contains missing data - only SNPs with no missing data will be used for phylogeny

# 3. F. exsecta vcf for outgroup use (genotyped by calling only variant positions from the mac2-filtered VCF above)
# (see https://github.com/isatok/Wood_ant_local_genomic_patterns/blob/main/3_Prep4trees%26TWISST/2_Add_outgroup.sh how to achieve it)
EXSVCF=/scratch/project_2001443/barriers_introgr_formica/vcf/phasing/shapeit/Fexs_nodupl_phased_sites.vcf.gz
cp $EXSVCF $EXSVCF.tbi .     #Copy it and its index to phylogeny dir
bcftools index -n $EXSVCF    #524873 sites (9329 less than in the $PHASEDVCF: not all sites were found, but also part of this is duplicates)

gunzip -c $EXSVCF | cut -f2 | uniq -D | wc -l #Altogether 1334/2 = 667 duplicates in the unfiltered exsecta file

#Keep only sites hom for reference allele or snps
bcftools filter --threads 8 -Oz -e 'TYPE!="ref" && TYPE!="snp"' -m+ $EXSVCF > Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz
bcftools index -t Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz 
bcftools index -n Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz  #524313

gunzip -c Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz | cut -f2 | uniq -D | wc -l #214 /2 =107 #We still have 107 duplicates
gunzip -c Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz | grep "Scaffold01" | cut -f2 | uniq -D     # e.g. 2442227, 5047119, 5422749
bcftools view -H -r Scaffold01:2442227 Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz #They are mnps

#Always the first one is the snp and the second one mnp. Remove all second instances
bcftools norm --rm-dup all --threads 8 -Oz Fexs_nodupl_phased_sites_noindels_hardfilt_3.vcf.gz > Fexs_nodupl_phased_sites_noindels_hardfilt_3_rmdup.vcf.gz
bcftools index -n Fexs_nodupl_phased_sites_noindels_hardfilt_3_rmdup.vcf.gz #524206 snp remain; no duplicates left

#Merge the actual dataset and exsecta vcfs

bcftools merge -Ou \
  $PHASEDVCF \
  Fexs_nodupl_phased_sites_noindels_hardfilt_3_rmdup.vcf.gz -Oz -o phased_with_outgroup_dedupl.vcf.gz

bcftools index -n phased_with_outgroup_dedupl.vcf.gz # 534202 - the same amount as in the original vcf dataset. Ready to continue!
#IF WANT TO USE THIS, NEED TO DO THE SAME GT TRICK AS BELOW FOR UNPHASED DATA

# 4. Prepare the ***unphased*** vcf 

# Merge F. exsecta outgroup
VCFIN=/scratch/project_2001443/barriers_introgr_formica/vcf/filt/all_samples.DP8.hwe.AN10.noScaff00.mac2.vcf.gz
bcftools index -n $VCFIN  #534202 variants; just a double check

bcftools merge -Ou \
  $VCFIN \
  Fexs_nodupl_phased_sites_noindels_hardfilt_3_rmdup.vcf.gz -Oz -o unphased_with_outgroup_dedupl.vcf.gz

bcftools index -t unphased_with_outgroup_dedupl.vcf.gz
bcftools index -n unphased_with_outgroup_dedupl.vcf.gz #534202 variants, 102 samples; all good

# Change GTs in haploid Fexs sample from ./. into . ### NOTE THAT IF THE NUMBER OF SAMPLES CHANGES THIS NEEDS TO CHANGE. NOW ALTOGETHER 111 COLS (9 + 102); FEXS IS THE LAST ONE. ###
zcat unphased_with_outgroup_dedupl.vcf.gz | awk 'BEGIN {OFS=FS="\t"} {gsub(/\.\/\./,".", $111); print $0}' | bgzip >  unphased_with_outgroup_dedupl_gtfix.vcf.gz

# Select samples to be used in the NJ tree; should be same individuals that are used in PIXY.
# Selected individuals that are a) included in demographic modelling b) otherwise random c) mostly in sympatric region in Finland d) from all wider geographic locations
# e) non-admixed

cat nj_sample_list.txt #43 inds

CBAQ2_2w
CBAQ3_1w
CBAQ1_1w
NAZa_1w
VDa_1w
CAGa_1w
CF8b_1w
CF4b_1w
Pus2_1w
CF14a_1w
67-Faqu
103-Faqu
Lai_1w
Loa_1w
Lai_2w
1-Fprat
11-Flug
88-Flug
113-Flug
124-Flug
115-Flug
CBCH1_1w
CBCH2_2w
CBCH3_1w
2-Fprat
3-Fprat
6-Fprat
117-Fprat
120-Fprat
123-Fprat
12-Frufa
16-Frufa
26-Frufa
37-Frufa
72-Frufa
102-Frufa
RN424
RN421
RN422
RN419
RN420
RN426
Fexs

#Keep only selected individuals
zcat unphased_with_outgroup_dedupl_gtfix.vcf.gz | bcftools view -S nj_sample_list.txt | bgzip > unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz 
bcftools query -l unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz | wc -l #43 inds; all good

#How much missing data per ind?
vcftools --gzvcf unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz --missing-indv --out unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz.MISSING_DATA
sort -k 5 unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz.MISSING_DATA.imiss | column -t

# Keep only loci with no missing data and check the number of snps remaining
zcat unphased_with_outgroup_dedupl_gtfix_NJ_tree.vcf.gz | bcftools view -e 'F_MISSING > 0.0' | bgzip > unphased_with_outgroup_dedupl_gtfix_NJ_tree_maxmiss0.vcf.gz
bcftools index -t unphased_with_outgroup_dedupl_gtfix_NJ_tree_maxmiss0.vcf.gz
bcftools index -n unphased_with_outgroup_dedupl_gtfix_NJ_tree_maxmiss0.vcf.gz #31.683 SNPs

#Too few SNPs. Exclude individuals with more than 10% missing data and re-filter the previous step

cat nj_sample_list_maxmiss10.txt #37 inds
CBAQ2_2w
CBAQ3_1w
CBAQ1_1w
NAZa_1w
VDa_1w
CAGa_1w
CF8b_1w
CF4b_1w
Pus2_1w
CF14a_1w
Att1_1w
Jar6_1w
Fis2_1w
Lok3_1w
67-Faqu
103-Faqu
Lai_1w
Loa_1w
Lai_2w
1-Fprat
11-Flug
88-Flug
113-Flug
124-Flug
115-Flug
CBCH1_1w
CBCH2_2w
CBCH3_1w
2-Fprat
3-Fprat
6-Fprat
117-Fprat
120-Fprat
123-Fprat
16-Frufa
26-Frufa
37-Frufa
72-Frufa
102-Frufa
RN419
Fexs

#Keep only selected individuals when 
zcat unphased_with_outgroup_dedupl_gtfix.vcf.gz | bcftools view -S nj_sample_list_maxmiss10.txt | bgzip > unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10.vcf.gz 
bcftools query -l unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10.vcf.gz | wc -l #37 inds; all good

# Keep again only loci with no missing data and check the number of snps remaining
zcat unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10.vcf.gz | bcftools view -e 'F_MISSING > 0.0' | bgzip > unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10_SNPmaxmiss0.vcf.gz
bcftools index -t unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10_SNPmaxmiss0.vcf.gz
bcftools index -n unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10_SNPmaxmiss0.vcf.gz #205.503 SNPs - better, let's continue with this.


### Convert to phylip
#The VCF file was converted to phylip format using the script vcf2phylip (28).  E. M. Ortiz, vcf2phylip v2.0: 
#convert a VCF matrix into several matrix formats for phylogenetic analysis (2019; https://zenodo.org/record/2540861).

wget https://github.com/edgardomortiz/vcf2phylip/archive/refs/tags/v2.8.zip 
unzip v2.8.zip

module load python-data
python ./vcf2phylip-2.8/vcf2phylip.py -i unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10_SNPmaxmiss0.vcf.gz -o Fexs -w

#Number of samples in VCF: 37
#Total of genotypes processed: 205503
#Genotypes excluded because they exceeded the amount of missing data allowed: 0
#Genotypes that passed missing data filter but were excluded for being MNPs: 0
#SNPs that passed the filters: 205503
#Used sites saved to: 'unphased_with_outgroup_dedupl_gtfix_NJ_tree_INDmaxmiss10_SNPmaxmiss0.min4.used_sites.tsv'

### NEXT MOVE TO R ! ###













-----------------------------------------------------------------------------

###
### ASTRAL - maybe not to be used after all?
###

Does it go like this:

# 1) Take the genome annotation file (& scp it to Puhti)
/Users/inaukkar/Downloads/Faqxpol_genome_annotation_v1.gff3.gz
ANNOT=Faqxpol_genome_annotation_v1.gff3.gz

# 2) Extract gene regions from there https://www.biostars.org/p/98725/
gff2bed < annotations.gff | grep -w 'gene' | cut -f1-4 > genes.bed

# 3) Use the gene coordinates to build gene trees https://github.com/simonhmartin/genomics_general#trees-for-sliding-windows,
# maybe with "window can be defined based on genomic coordinates (--windType coord)", no outgroup (unrooted), all non-admixed samples

# 4) Use ASTRAL to make a phylogeny from these gene trees https://github.com/smirarab/ASTRAL
java -jar astral.5.7.8.jar -i in.tree -o out.tre 2>out.log
# also include "-a" option: When multiple individuals from the same species are available, you can ask ASTRAL to force them to be together in the species tree. 
# To do this, a mapping file needs to be provided using the -a option: one species per line; species_name [number of individuals] individual_1 individual_2 ...

#QUESTIONS:
# Can I use my imputed and phased SNP-data to build the gene trees? Is it correct to define the tree regions by using "gene" annotations from the annotation file?



###
### Obsolete
###

#Create the tree using dataset *with missing data*
njs(X, fs = 15)
#https://rdrr.io/cran/ape/man/njs.html
#X: a distance matrix.
#fs: argument s of the agglomerative criterion: it is coerced as an integer and must at least equal to one.

