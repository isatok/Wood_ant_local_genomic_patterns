###### Extract genes in the regions of interest and find their functional annotation ######

cd /scratch/project_2001443/barriers_introgr_formica_112024/introgressed_genes
sinteractive --account project_2001443 --mem 3000

module load biokit
GFF=/scratch/project_2001443/reference_genome/Faqxpol_genome_annotation_v1.gff3
REF=/scratch/project_2001443/reference_genome/Formica_hybrid_v1_wFhyb_Sapis.fa

### Study potential climatic adaptation, i.e. study regions that have introgressed only from F. pol to Finnish F. aqu ###

## A. extract multiple regions (all consequtive regions with elevated introgression signal)
GFFREG=genes_scaff06_pol_to_aqufi.gff3
FASTAREG=genes_scaff06_pol_to_aqufi.fasta
awk '$1 == "Scaffold06" && $4 >= 7321085 && $5 <= 7432689 && $3 == "gene"' $GFF > $GFFREG
bedtools getfasta -fi $REF -bed $GFFREG -fo $FASTAREG

## B. extract only the window with the strongest introgression signal (among multiple consequtive ones)
GFFREG2=genes_1window_scaff06_pol_to_aqufi.gff3
FASTAREG2=genes_1window_scaff06_pol_to_aqufi.fasta
awk '$1 == "Scaffold06" && $4 >= 7342056 && $5 <= 7404659 && $3 == "gene"' $GFF > $GFFREG2
bedtools getfasta -fi $REF -bed $GFFREG2 -fo $FASTAREG2

## Let's use CSC instructions to do the BLAST/ find functional annotations for the extracted regions:

#cd /scratch/project_2001443/barriers_introgr_formica_112024/introgressed_genes
#sinteractive --account project_2001443 --mem 12000 --cores 4

#module load biokit
#FASTAREG2=genes_1window_scaff06_pol_to_aqufi.fasta

#blastx -query $FASTAREG2 -db nr -num_threads 4 -out results_introgressed_genes_climate_nr.out -evalue 1e-3 -outfmt 7 -max_target_seqs 5
#the runtime for above was xx and the memory consumption was xx

#blastn -query $FASTAREG2 -db nt -num_threads 4 -out results_introgressed_genes_climate_nr.out -evalue 1e-3 -outfmt 7 -max_target_seqs 5
#the runtime for above was xx and the memory consumption was xx

#### If this consumes too much memory and time, let's use the automated batch blast #RUNNING THIS 19.12.2024# #### 
#### RUNNING THIS AGAIN 10.03.2025 WITH TBLASTX & INSECTA #### --> check: blast_clusterrun -jobid 2030350

# https://docs.csc.fi/apps/blast/

module load biokit
FASTAREG2=genes_1window_scaff06_pol_to_aqufi.fasta
cd /scratch/project_2001443/barriers_introgr_formica_112024/introgressed_genes

#pb blastn -query $FASTAREG2 -db nt -out results_introgressed_genes_climate_pb_nt.out -evalue 1e-3 -outfmt 7 -max_target_seqs 5
#pb blastx -query $FASTAREG2 -db nr -out results_introgressed_genes_climate_pb_nr.out -evalue 1e-3 -outfmt 7 -max_target_seqs 5
pb tblastx -taxids 50557 -query $FASTAREG2 -db nt -out tblastx_nt_insecta_scaff06_7342056_7404659.out -evalue 1e-3 -outfmt 7 -max_target_seqs 20

#Close the monitoring: Ctrl-c. To reconnect to pb blast job &COLLECT THE RESULTS WHEN IT'S READY: blast_clusterrun
#This lists the temporary directories of your unfinished pb blast jobs. 
#You can check the job number of your blast job from the directory name. 
#Use this number with -jobid option to define the pb blast job you wish to reconnect to.
# > blast_clusterrun -jobid some-number


#Collect BLAST results:

#Among the results, choose for each query the best hit: among the (equally) best e-values, select the one with the highest bit score (change the in/output
#file name accordingly.

awk '!/^#/ { 
evalue1 = ($11 ~ /[eE]/) ? $11 + 0 : $11 
if (min[$1] == "" || evalue1 < min[$1]) { 
min[$1] = evalue1 
best[$1] = $0 
split_bit[$1] = $12 
}
else if (evalue1 == min[$1] && $12 > split_bit[$1]) {
split_bit[$1] = $12 
best[$1] = $0 
} 
} 
END {
 for (q in best) print best[q] 
}' results_introgressed_genes_climate_pb_nt.out > results_introgressed_genes_climate_pb_nt_bestHits.txt

#Select only the protein/ mRNA IDs
awk '{print $2}' results_introgressed_genes_climate_pb_nt_bestHits.txt > results_introgressed_genes_climate_pb_nt_bestHits_protID.txt

#Now these are refseq entries. How to find the uniprot ids in order to do go enrichment?

